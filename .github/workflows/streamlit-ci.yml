name: Streamlit CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install flake8 pytest 
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Docker Build and Push to Docker Hub
        run: |
              docker build -t mlops-exam:latest .
              docker tag mlops-exam jaydeep04/mlops-exam:latest
              echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
              docker push jaydeep04/mlops-exam:latest  
        env:
            DOCKER_CLI_ACI: 1
          

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
            scan-type: 'fs'
            scan-ref: '.'
            trivy-config: trivy.yaml

      - name: Trivy File Scan
        run : |
            trivy fs . > trivy_scan.txt
            trivy image jaydeep04/mlops-exam:latest > trivy_image_scan.txt

      - name: Run Streamlit app (headless check)
        run: |
          streamlit run webapp/pages/mlops-endsem.py --server.headless true &
          sleep 10
          pkill streamlit

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys